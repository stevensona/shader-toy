{
    "name": "shader-toy",
    "displayName": "Shader Toy",
    "description": "Live preview of GLSL shaders similar to shadertoy",
    "version": "0.11.1",
    "publisher": "stevensona",
    "license": "MIT",
    "repository": {
        "url": "https://github.com/stevensona/shader-toy.git"
    },
    "bugs": {
        "url": "https://github.com/stevensona/shader-toy/issues"
    },
    "engines": {
        "vscode": "^1.79.1"
    },
    "categories": [
        "Other"
    ],
    "main": "./dist/extension.js",
    "contributes": {
        "configuration": {
            "properties": {
                "shader-toy.forceAspectRatio": {
                    "type": "array",
                    "items": [
                        {
                            "type": "number"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "default": [
                        0,
                        0
                    ],
                    "description": "Force the rendering into a specific aspect ratio. Set either to zero or negative to ignore."
                },
                "shader-toy.showCompileErrorsAsDiagnostics": {
                    "type": "boolean",
                    "default": true,
                    "description": "Show all compile errors directly in the editor as diagnostics."
                },
                "shader-toy.omitDeprecationWarnings": {
                    "type": "boolean",
                    "default": false,
                    "description": "Omit warnings when using a deprecated feature, replacing those with a single warning on activating the extension. Be careful with this setting, as shaders might break unpredictably in future updates."
                },
                "shader-toy.enableGlslifySupport": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable support for glslify, which will transform shader code after all transformations this extension does. Line numbers for errors are currently disable when this option is enabled."
                },
                "shader-toy.reloadAutomatically": {
                    "type": "boolean",
                    "default": true,
                    "description": "Master switch for all automatic reloads."
                },
                "shader-toy.reloadOnEditText": {
                    "type": "boolean",
                    "default": true,
                    "description": "Reload OpenGL viewport when the opened file contents are changed."
                },
                "shader-toy.reloadOnEditTextDelay": {
                    "type": "number",
                    "default": 1,
                    "description": "Delay in seconds between an edit of the opened file and the reload of OpenGL viewport."
                },
                "shader-toy.reloadOnChangeEditor": {
                    "type": "boolean",
                    "default": false,
                    "description": "Reload OpenGL viewport when editor changes."
                },
                "shader-toy.reloadOnSaveFile": {
                    "type": "boolean",
                    "default": true,
                    "description": "Reload OpenGL viewport when editor is saved."
                },
                "shader-toy.resetStateOnChangeEditor": {
                    "type": "boolean",
                    "default": true,
                    "description": "Reset state of time, mouse and keyboard when reloading OpenGL viewport through an editor change."
                },
                "shader-toy.showScreenshotButton": {
                    "type": "boolean",
                    "default": true,
                    "description": "Shows a screenshot button in the OpenGL viewport which allows to save the current frame as a png file."
                },
                "shader-toy.screenshotResolution": {
                    "type": "array",
                    "items": [
                        {
                            "type": "number"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "default": [
                        0,
                        0
                    ],
                    "description": "Manually set the resolution of a screenshot. Set either to zero or negative to use the viewports resolution."
                },
                "shader-toy.showRecordButton": {
                    "type": "boolean",
                    "default": true,
                    "description": "Shows a record button in the OpenGL viewport which allows to start a recording of the viewport."
                },
                "shader-toy.recordTargetFramerate": {
                    "type": "number",
                    "default": 30,
                    "description": "Framerate that is targeted when using the record button."
                },
                "shader-toy.showPauseButton": {
                    "type": "boolean",
                    "default": true,
                    "description": "Shows a pause button in the OpenGL viewport which allows to pause the rendering."
                },
                "shader-toy.pauseWholeRender": {
                    "type": "boolean",
                    "default": true,
                    "description": "Determines whether pausing will pause only time thus still render and allow input, or pause everything."
                },
                "shader-toy.pauseMaintainedOnReload": {
                    "type": "boolean",
                    "default": false,
                    "description": "If unticked the render wil un-pause when reloading, otherwise it will stay paused if it was paused before."
                },
                "shader-toy.printShaderFrameTime": {
                    "type": "boolean",
                    "default": true,
                    "description": "Display shader frame time graph in corner of display."
                },
                "shader-toy.warnOnUndefinedTextures": {
                    "type": "boolean",
                    "default": true,
                    "description": "If enabled the user is warned when a channel is used in code but there is no definition for said channel, likely resulting in a bug in the shader."
                },
                "shader-toy.enabledAudioInput": {
                    "type": "boolean",
                    "default": false,
                    "description": "Allow using media files as inputs in shaders. Note that the feature is experimental and should be used with caution."
                },
                "shader-toy.audioDomainSize": {
                    "type": "number",
                    "default": 512,
                    "description": "Size of the domain used for four transformation when using audio as an input."
                },
                "shader-toy.testCompileIncludedFiles": {
                    "type": "boolean",
                    "default": true,
                    "description": "If enabled all included files will be compiled on their own. Some included files may not compile on their own and require this to be disabled."
                },
                "shader-toy.shaderToyStrictCompatibility": {
                    "type": "boolean",
                    "default": false,
                    "description": "This setting will assume your shaders follow the standards set on the online version of ShaderToy, e.g. you have a mainImage function defined. Use this if you have issues with shaders from shadertoy.com in the VSCode extension, but not if you regularly use shaders defining a regular main function."
                }
            }
        },
        "commands": [
            {
                "command": "shader-toy.showGlslPreview",
                "title": "Shader Toy: Show GLSL Preview"
            },
            {
                "command": "shader-toy.showStaticGlslPreview",
                "title": "Shader Toy: Show Static GLSL Preview"
            },
            {
                "command": "shader-toy.createPortableGlslPreview",
                "title": "Shader Toy: Create Portable GLSL Preview"
            },
            {
                "command": "shader-toy.pauseGlslPreviews",
                "title": "Shader Toy: Pause/Play GLSL Previews"
            },
            {
                "command": "shader-toy.saveGlslPreviewScreenShots",
                "title": "Shader Toy: Save GLSL Preview Screenshots"
            }
        ],
        "menus": {
            "editor/context": [
                {
                    "command": "shader-toy.showGlslPreview",
                    "group": "ShaderToy-Core"
                },
                {
                    "command": "shader-toy.showStaticGlslPreview",
                    "group": "ShaderToy-Core"
                },
                {
                    "command": "shader-toy.createPortableGlslPreview",
                    "group": "ShaderToy"
                },
                {
                    "command": "shader-toy.pauseGlslPreviews",
                    "group": "ShaderToy"
                },
                {
                    "command": "shader-toy.saveGlslPreviewScreenShots",
                    "group": "ShaderToy"
                }
            ]
        }
    },
    "scripts": {
        "vscode:prepublish": "webpack --mode production",
        "compile": "tsc -p ./",
        "watch": "tsc -watch -p ./",
        "webpack": "webpack --mode development",
        "webpack-dev": "webpack --mode development --watch",
        "pretest": "npm run compile",
        "test": "node ./out/test/run_tests.js",
        "deploy": "vsce publish",
        "format": "eslint --fix \"src/**\" --config .eslintrc.json"
    },
    "dependencies": {
        "compare-versions": "^5.0.3",
        "glslify": "^7.1.1",
        "mime": "^3.0.0"
    },
    "devDependencies": {
        "@types/glob": "^8.1.0",
        "@types/mime": "^3.0.1",
        "@types/mocha": "^10.0.1",
        "@types/node": "^20.3.1",
        "@types/vscode": "^1.79.1",
        "@typescript-eslint/eslint-plugin": "^6.7.0",
        "@typescript-eslint/parser": "^6.7.0",
        "@vscode/test-electron": "^2.3.4",
        "@vscode/vsce": "^2.21.0",
        "eslint": "^8.49.0",
        "glob": "^10.2.7",
        "mocha": "^10.2.0",
        "ts-loader": "^9.4.3",
        "typescript": "^5.1.3",
        "webpack": "^5.87.0",
        "webpack-cli": "^5.1.4"
    },
    "icon": "resources/thumb.png"
}
